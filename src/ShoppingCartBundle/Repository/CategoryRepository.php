<?php

namespace ShoppingCartBundle\Repository;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping;
use ShoppingCartBundle\Entity\Category;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{
    public function __construct(EntityManager $em, Mapping\ClassMetadata $class = null)
    {
        parent::__construct($em,
            $class == null ? new Mapping\ClassMetadata(Category::class) :$class
        );
    }

    public function findAllCategories()
    {
        return $this->createQueryBuilder('c')
            ->where('c.isDelete = :isDelete')
            ->orderBy('c.name')
            ->orderBy('c.id')
            ->setParameter('isDelete', false)
            ->getQuery()
            ->getResult();
    }

    public function findCategoryIdByName($categoryName)
    {
        return $this->createQueryBuilder('c')
            ->where('c.isDelete = :isDelete')
            ->andWhere('c.name = :name')
            ->orderBy('c.name')
            ->orderBy('c.id')
            ->setParameter('isDelete', false)
            ->setParameter('name', $categoryName)
            ->getQuery()
            ->getResult();
    }

    public function deleteCategory($categoryId)
    {
        return $this->createQueryBuilder('c')
            ->update()
            ->set('c.isDelete', '?1')
            ->setParameter(1, true)
            ->where('c.id = ?2')
            ->setParameter(2, $categoryId)
            ->getQuery()
            ->getSingleScalarResult();

    }
}
